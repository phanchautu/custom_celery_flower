version: '3.7'
services:
  redis:
    image: redis:alpine
    hostname: redis
    command: ["redis-server", "--requirepass", "w3ai-aioz_ai=2024"]
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PASSWORD=w3ai-aioz_ai=2024
    networks:
      - flower-networks
    healthcheck:
      test: [ "CMD", "redis-cli","-a", "w3ai-aioz_ai=2024", "--raw", "incr", "ping" ]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 20s

  rabbitmq:
    image: rabbitmq:3.13.1-management
    container_name: rabbitmq_test
    hostname: rabbitmq
    volumes:
      - rabbitmq:/var/lib/rabbitmq/
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - flower-networks
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 5s
      timeout: 20s
      retries: 5
 

  custom_flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: custom-flower-1
    
    ports:
      - 5555:5555
    environment:
      - BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - FLOWER_BROKER_API=http://guest:guest@rabbitmq:15672/api/
      - FLOWER_BASIC_AUTH=admin:admin
      - FLOWER_OPERATOR_AUTH=operator:operator
      - FLOWER_GUEST_AUTH=guest:guest
      - FLOWER_PERSISTENT=True
      - FLOWER_DB=/data/flower_db
      - FLOWER_ENABLE_EVENT=True
      - FLOWER_REDIS_PASSWORD=w3ai-aioz_ai=2024
      - FLOWER_REDIS_HOST=redis
      - FLOWER_REDIS_DATABASE_TABLE=1
    volumes:
      - flower:/data
    links:
      - redis
      - rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy 
      redis:
        condition: service_healthy      
    networks:
      - flower-networks

volumes:
  flower:
  rabbitmq:
  redis_data:
  custom_flower:
networks:
  flower-networks: